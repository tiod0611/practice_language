library(dplyr)
exam = read.csv("csv_exam.csv")
exam = read.csv("../Data/csv_exam.csv")
exam
exam %>% filter(class == 1)
# 문제 class가 2인 데이터 뽑기
exam %>% filter(class==2)
source("C:/Users/Kyeul/Desktop/code/언어_연습/practice_language/R/DoIt_R_programming/chapter_6/6-2.R", echo=TRUE)
# 여러 조건으로 사용하기
exam %>% filter(class==1 & math >= 50)
exam %>% filter(class==1 | math >=50)
# %in% 기호 사용하기 포함된 데이터를 보여줌
exam %>% filter(class %in% c(1,2))
# 추출한 데이터를 새로운 변수에 저장하자
class1 = exam %>% filter(class==1)
class1
class2 = exam %>% filter(class==2)
class2
mean(class1$math)
mean(class2$math)
# 연습문제
library(ggplot2)
mpg = as.data.frame(mpg)
mpg
#1 배기량이 4인 차와 5인차의 고속도로 연비 평균 확인
displ1 = mpg %>% filter(displ==4)
source("C:/Users/Kyeul/Desktop/code/언어_연습/practice_language/R/DoIt_R_programming/chapter_6/6-2.R", echo=TRUE)
displ2 = mpg %>% filter(displ==5)
mean(displ1$hwy)
mean(displ2$hwy)
#2 자동차 제조사의 연비 확인
mpg$manufacturer
#2 자동차 제조사의 연비 확인
name(mpg$manufacturer)
#2 자동차 제조사의 연비 확인
table(mpg$manufacturer)
audi = mpg %>% filter(manufacturer=="audi")
toyota = mpg %>% filter(manufacturer=="toyota")
mean(audi$cty)
mean(toyota$cty)
mean((mpg %>% filter(manufacturer %in% c("checrolet", "ford", "honda")))$hwy)
#1 배기량이 4인 차와 5인차의 고속도로 연비 평균 확인
displ1 = mpg %>% filter(displ<=4)
displ2 = mpg %>% filter(displ>=5)
mean(displ1$hwy)
mean(displ2$hwy)
mean((mpg %>% filter(manufacturer %in% c("checrolet", "ford", "honda")))$hwy)
three_m = mpg %>% filter(manufacturer %in% c("checrolet", "ford", "honda"))
mean(three_m$hwy)
exam %>% select(math)
exam %>% select(math, english)
exam %>% select(c("math", "english"))
# 변수 제외하기
exam %>% select(-math)
# dplyr과 조합하여 사용하기
exam %>% filter(class==1) %>% select(math)
# dplyr과 조합하여 사용하기
exam %>% filter(class==1) %>%
select(math) %>%
table
# dplyr과 조합하여 사용하기
exam %>% filter(class==1) %>%
select(math) %>%
table %>%
# dplyr과 조합하여 사용하기
exam %>% filter(class==1) %>%
select(math) %>%
table %>%
sum
# dplyr과 조합하여 사용하기
exam %>% filter(class==1) %>%
select(math) %>%
table %>%
mean
exam %>% arrange(math)
# 내림차순
exam %>% arrange(desc(math))
desc(math)
desc(exam$math)
# 그룹으로 하기
exam %>% arrange(matn, english)
# 그룹으로 하기
exam %>% arrange(class, english)
# 연습문제
# audi 자동차 중 hwy 연비가 높은 5개의 데이터를 출력
mpg %>% filter(manufacturer=="audi") %>%
arrange(hwy) %>%
head(5)
# 연습문제
# audi 자동차 중 hwy 연비가 높은 5개의 데이터를 출력
mpg %>% filter(manufacturer=="audi") %>%
arrange(desc(hwy)) %>%
head(5)
exam %>% mutate(total = math+english+science)
# 여러개 만들기
exam %>% mutate(total = math+english+science,
mean = mean(total))
# 여러개 만들기
exam %>% mutate(total = math+english+science,
mean = (math+english+science)/3)
# ifelse 사용하여 특정 값 넣기
exam %>% mutate(test = ifelse(math>70, "pass", "fail"))
# 파생변수를 추가한 후 dplyr 함수 사용
exam %>% mutate(total = math+english+science) %>%
arrange(total)
# 파생변수를 추가한 후 dplyr 함수 사용
exam %>% mutate(total = math+english+science) %>%
arrange(desc(total))
